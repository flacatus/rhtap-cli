{{- define "rhtap-dh.app-conf" }}
app:
  title: Red Hat Developer Hub
  baseUrl: ${BACKEND_URL}
# Lookup for all the required secrets
{{- $argocdSecretObj := (lookup "v1" "Secret" .Release.Namespace "rhtap-argocd-integration") }}
{{- $argocdSecretData := ($argocdSecretObj.data | default dict) }}
{{- $ghSecretObj := (lookup "v1" "Secret" .Release.Namespace "rhtap-github-integration") }}
{{- $gitlabSecretObj := (lookup "v1" "Secret" .Release.Namespace "rhtap-gitlab-integration") }}
{{- $jenkinsSecretObj := (lookup "v1" "Secret" .Release.Namespace "rhtap-jenkins-integration") }}
{{- $quaySecretObj := (lookup "v1" "Secret" .Release.Namespace "rhtap-quay-integration") }}
{{- $quaySecretData := ($quaySecretObj.data | default dict) }}
{{- $nexusSecretObj := (lookup "v1" "Secret" .Release.Namespace "rhtap-nexus-integration") }}

{{- if $argocdSecretData }}
argocd:
  appLocatorMethods:
    - type: 'config'
      instances:
        - name: default
          url: ${ARGOCD__URL}
          token: ${ARGOCD__API_TOKEN}
  password: ${ARGOCD__PASSWORD}
  username: ${ARGOCD__USER}
  waitCycles: 25
{{- end }}
auth:
  environment: production
  providers:
  {{- if $ghSecretObj }}
    github:
      production:
        clientId: ${GITHUB__APP__CLIENT__ID}
        clientSecret: ${GITHUB__APP__CLIENT__SECRET}
      {{- if ne ($ghSecretObj.data.host | b64dec) "github.com" }}
        enterpriseInstanceUrl: ${GITHUB__URL}
      {{- end }}
  {{- end }}
backend:
  auth:
    keys:
      - secret: ${BACKEND_SECRET}
  {{- if .Values.debug.ci }}
    dangerouslyDisableDefaultAuthPolicy: true
  {{- end }}
  baseUrl: ${BACKEND_URL}
  cors:
    origin: ${BACKEND_URL}
catalog:
  locations:
    - type: url
      target: ${DEVELOPER_HUB__CATALOG__URL}
  rules:
    - allow:
      - Component
      - System
      - Group
      - Resource
      - Location
      - Template
      - API
{{- if $jenkinsSecretObj }}
jenkins:
  instances:
    - name: default
      baseUrl: ${JENKINS__BASEURL}
      username: ${JENKINS__USERNAME}
      apiKey: ${JENKINS__TOKEN}
{{- end }}
integrations:
{{- if $ghSecretObj }}
  github:
    - host: ${GITHUB__HOST}
      apps:
        - appId: ${GITHUB__APP__ID}
          clientId: ${GITHUB__APP__CLIENT__ID}
          clientSecret: ${GITHUB__APP__CLIENT__SECRET}
          webhookUrl: ${GITHUB__APP__WEBHOOK__URL}
          webhookSecret: ${GITHUB__APP__WEBHOOK__SECRET}
          privateKey: ${GITHUB__APP__PRIVATE_KEY}
{{- end }}
{{- if $gitlabSecretObj }}
  gitlab:
    - host: ${GITLAB__HOST}
      apiBaseUrl: https://${GITLAB__HOST}/api/v4
      token: ${GITLAB__TOKEN}
{{- end }}
proxy:
  endpoints:
  {{- if $quaySecretObj }}
    '/quay/api':
      target: ${QUAY__URL}
      headers:
        X-Requested-With: 'XMLHttpRequest'
      {{- if $quaySecretData.token }}
        Authorization: 'Bearer ${QUAY__API_TOKEN}'
      {{- end }}
      changeOrigin: true
      # Change to "false" in case of using self hosted quay instance with a self-signed certificate
      secure: true
  {{- end }}
  {{- if $nexusSecretObj }}
    '/nexus/api':
      target: ${NEXUS__URL}
      headers:
        X-Requested-With: 'XMLHttpRequest'
      changeOrigin: true
      secure: true
  {{- end }}
{{- if $quaySecretObj }}
quay:
  uiUrl: ${QUAY__URL}
{{- end }}
{{- if $nexusSecretObj }}
nexus:
  uiUrl: ${NEXUS__URL}
{{- end }}
techdocs:
  builder: 'local'
  generator:
    runIn: 'local'
  publisher:
    type: 'local'
{{- end }}
